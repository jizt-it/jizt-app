plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "com.github.triplet.play" version "3.7.0-agp4.2"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def dartEnvConfig = [JIZT_APP_ENV: 'dev']
if (project.hasProperty("env")) {
    dartEnvConfig["JIZT_APP_ENV"] = project.getProperty("env")
} else if (project.hasProperty('dart-defines')) {
    dartEnvConfig = dartEnvConfig +
            project.property('dart-defines')
                    .split(',')
                    .collectEntries { entry ->
                        def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                        [(pair.first()): pair.last()]
                    }
}
def appEnv = dartEnvConfig.JIZT_APP_ENV
def isProdEnv = appEnv == 'prod'
println "Environment: ${dartEnvConfig.JIZT_APP_ENV}"

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        release {
            storeFile file('../../secrets/release.jks')
            storePassword System.getenv("JIZT_RELEASE_KEY_STORE_PASS")
            keyAlias System.getenv("JIZT_RELEASE_KEY_ALIAS")
            keyPassword System.getenv("JIZT_RELEASE_KEY_PASS")
        }
    }

    defaultConfig {
        applicationId "it.jizt.app"
        applicationIdSuffix isProdEnv ? '' : appEnv
        minSdkVersion 16
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        resValue "string", "app_name", 'Jizt' + (isProdEnv ? '' : ".$appEnv")
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

play { // https://github.com/Triple-T/gradle-play-publisher
    // serviceAccountCredentials in ANDROID_PUBLISHER_CREDENTIALS secret
    enabled = System.getenv("ANDROID_PUBLISHER_CREDENTIALS") != null
    artifactDir = file('../../build/app/outputs/bundle/release/app-release.aab')
    defaultToAppBundles = true
    track = 'internal'
}

dependencies {
}
